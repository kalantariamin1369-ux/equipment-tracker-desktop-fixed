name: Build Equipment Tracker Installer
permissions:
  contents: write
  packages: write
on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - '.gitignore'
      - 'docs/**'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  release:
    types: [published]
jobs:
  build-installer:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET Framework
      uses: microsoft/setup-msbuild@v2
      
    - name: Setup NuGet
      uses: nuget/setup-nuget@v2
      
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.config') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
      
    - name: Restore NuGet packages
      run: nuget restore EquipmentTracker.sln
      
    - name: Build solution
      run: msbuild EquipmentTracker.sln /p:Configuration=Release /p:Platform="Any CPU" /p:TargetFrameworkVersion=v4.6 /p:OutputPath=bin\Release\
      
    - name: Verify build output
      run: |
        if (!(Test-Path "bin\Release\EquipmentTracker.exe")) {
          Write-Error "Build failed - EquipmentTracker.exe not found"
          exit 1
        }
        Write-Host "Build successful - Files in bin\Release:"
        Get-ChildItem -Path "bin\Release" -Recurse | Select-Object Name, Length
      
    - name: Create installer directory
      run: |
        # Create installer output directory
        New-Item -ItemType Directory -Force -Path "installer"
        
        # Copy the executable to installer directory as the installer
        Copy-Item -Path "bin\Release\EquipmentTracker.exe" -Destination "installer\EquipmentTracker-Setup.exe"
        
        Write-Host "Installer created successfully"
        
    - name: Verify installer output
      run: |
        Write-Host "Verifying installer output..."
        
        $exeFile = "installer\EquipmentTracker-Setup.exe"
        
        if (Test-Path $exeFile) {
          $exeSize = (Get-Item $exeFile).Length
          Write-Host "✓ EXE installer: $exeFile ($([math]::Round($exeSize/1MB, 2)) MB)"
        } else {
          Write-Error "✗ EXE installer not found"
          exit 1
        }
        
    - name: Upload EXE installer
      uses: actions/upload-artifact@v4
      with:
        name: EquipmentTracker-EXE-Installer
        path: installer\EquipmentTracker-Setup.exe
        retention-days: 30
        
    - name: Create Release (on tag push)
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: installer/EquipmentTracker-Setup.exe
        generate_release_notes: true
        draft: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
